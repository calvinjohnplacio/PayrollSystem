/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.crud.view;

import com.crud.control.dbConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author calvin
 */
public class payroll extends javax.swing.JFrame {
Connection connection1;
emplist p=new emplist();

private void showrecords(){
     try{
        PreparedStatement pst1;
        ResultSet rs1;
        dbConnection dbConnect = dbConnection.getdbConnection();
        connection1 = dbConnect.getConnection();
        String course="SELECT * FROM paydates ";
        pst1=connection1.prepareStatement(course);
        rs1=pst1.executeQuery();
        trans.setModel(DbUtils.resultSetToTableModel(rs1));
        
        
         }catch(SQLException e){
             JOptionPane.showMessageDialog(null,"not connected");
         } 
}


    /**
     * Creates new form payroll
     */
    public payroll() {
        initComponents();
        showrecords();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cutday = new javax.swing.JComboBox<>();
        cutmonth = new javax.swing.JComboBox<>();
        stmonth = new javax.swing.JComboBox<>();
        stday = new javax.swing.JComboBox<>();
        year = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        trans = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cutday.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cutday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Day","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31" }));
        jPanel1.add(cutday, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 130, 32));

        cutmonth.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cutmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "month","1","2","3","4","5","6","7","8","9","10","11","12" }));
        jPanel1.add(cutmonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 130, 32));

        stmonth.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        stmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "month","1","2","3","4","5","6","7","8","9","10","11","12" }));
        jPanel1.add(stmonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 130, 32));

        stday.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        stday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Day","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31" }));
        jPanel1.add(stday, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 130, 32));

        year.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        year.setText("Year");
        jPanel1.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 130, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setText("Transaction lists");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 240, 40));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Start Date:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 90, 40));

        trans.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        trans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {

            }
        ));
        trans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(trans);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 1030, 240));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Cut off Date:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 100, 40));

        jButton1.setText("Add transaction");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 80, 140, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 640));

        jMenu1.setText("home");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
             this.setVisible(false);
    new Menu().setVisible(true);
        
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          ResultSet rs,rs1,r;
             PreparedStatement ps2,def;
             String course="SELECT * FROM Paydates";
         dbConnection dbConnect = dbConnection.getdbConnection();
        connection1 = dbConnect.getConnection();
   try{
        def=connection1.prepareStatement("SELECT * FROM Paydates WHERE Startdate BETWEEN '"+year.getText()+"-"+stmonth.getSelectedItem()+"-"+stday.getSelectedItem()+"' AND '"+year.getText()+"-"+cutmonth.getSelectedItem()+"-"+cutday.getSelectedItem()+"' OR CutoffDate BETWEEN '"+year.getText()+"-"+stmonth.getSelectedItem()+"-"+stday.getSelectedItem()+"' AND '"+year.getText()+"-"+cutmonth.getSelectedItem()+"-"+cutday.getSelectedItem()+"'");
            r=def.executeQuery();
            if(r.next()){
             JOptionPane.showMessageDialog(null,"Existing Transaction between the dates selected cannot add to the record");  
            }
            else{
        try{
            
            
            
            ps2=connection1.prepareStatement("INSERT INTO `paydates` (`TransactionID`, `StartDate`, `CutOffDate`)  VALUE(NULL,'"+year.getText()+"-"+stmonth.getSelectedItem()+"-"+stday.getSelectedItem()+"','"+year.getText()+"-"+cutmonth.getSelectedItem()+"-"+cutday.getSelectedItem()+"')");     
          
           
             ps2.executeUpdate();   
             
             
        ps2=connection1.prepareStatement(course);
        rs=ps2.executeQuery();
        
        
       trans.setModel(DbUtils.resultSetToTableModel(rs));
       
       
       
      
             
          JOptionPane.showMessageDialog(null,"Transaction added to the record");
            
        } catch (SQLException ex) {
        Logger.getLogger(payroll.class.getName()).log(Level.SEVERE, null, ex);
    }
        try{
       
       
        String em="SELECT empno FROM employee";
             String d="SELECT TransactionID FROM paydates WHERE StartDate='"+year.getText()+"-"+stmonth.getSelectedItem()+"-"+stday.getSelectedItem()+"' AND CutOffDate='"+year.getText()+"-"+cutmonth.getSelectedItem()+"-"+cutday.getSelectedItem()+"'";
        ps2=connection1.prepareStatement(d);
        rs=ps2.executeQuery();
       
        if(rs.next()){
             String T=rs.getString(1);
            
            PreparedStatement pst2;
            pst2=connection1.prepareStatement(em);
            rs1=pst2.executeQuery();
            
            while(rs1.next()){
                String empno=rs1.getString(1);
              ps2=connection1.prepareStatement("INSERT INTO salary  VALUE("+T+","+empno+",0,0,0,0,0,'not paid',0)");          
             ps2.executeUpdate();   
            }
        }
            
       } catch (SQLException ex) {
        Logger.getLogger(payroll.class.getName()).log(Level.SEVERE, null, ex);
    }
            }
   }catch (SQLException ex) {
        Logger.getLogger(payroll.class.getName()).log(Level.SEVERE, null, ex);
    } 
        
   
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void transMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transMouseClicked
       int index=trans.getSelectedRow();
    TableModel model=trans.getModel();
    
    String idr=model.getValueAt(index,0).toString();
    String st=model.getValueAt(index,1).toString();
    String cut=model.getValueAt(index, 2).toString();

    p.tr.setText(idr);
    p.stdate.setText(st);
    p.cutdate.setText(cut);
    
    
    
      
     try{
        PreparedStatement pst1;
        ResultSet rs1;
        dbConnection dbConnect = dbConnection.getdbConnection();
        connection1 = dbConnect.getConnection();
        String s="SELECT employee.empno,employee.Firstname,employee.MI,employee.Lastname,salary.status FROM employee,salary WHERE employee.empno=salary.empno AND salary.status='not paid' AND salary.TransactionID="+idr;
        pst1=connection1.prepareStatement(s);
        rs1=pst1.executeQuery();
        p.emps.setModel(DbUtils.resultSetToTableModel(rs1));
        
        
        
        
        
         }catch(SQLException e){
             JOptionPane.showMessageDialog(null,"not connected");
         } 
    
    
    
    
    p.setVisible(true);
    p.pack();
    p.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    


    
    
    }//GEN-LAST:event_transMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new payroll().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cutday;
    private javax.swing.JComboBox<String> cutmonth;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> stday;
    private javax.swing.JComboBox<String> stmonth;
    private javax.swing.JTable trans;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
